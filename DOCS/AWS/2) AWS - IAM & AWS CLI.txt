IAM - Groups,Users,Roles,Policies,Access analyzer:
-------------------------------------------------

IAM : Users & Groups :
	1) IAM = Identity and Access Management, Global service
	2) Root account created by default, shouldn't be used or shared
	3) Users are people within your organization, and can be grouped
	4) Groups only contain users, not other groups
	5) Users don't have to belong to a group, and user can belong to multiple groups
	
IAM : Permissions:
	1) Users or Groups can be assigned JSON documents called policies.
		{
			"Version": "2012-10-17",
			"Statement": [
				{
					"Effect": "Allow",
					"Action": "s3:GetObject",
					"Resource": "arn:aws:s3:::example-bucket/*"
				}
			]
		}
		Explanation:
			1) Version: Specifies the policy language version (e.g., AWS uses "2012-10-17").
			2) Effect: "Allow" enables the specified action.
			3) Action: "s3:GetObject" grants permission to read objects in S3.
			4) Resource: Points to the specific bucket (example-bucket).
	2) These policies define the permission of the users.
	3) In AWS you apply the least privilege principle: don't give more permissions than a user needs.
	
IAM Policies :
	An IAM (Identity and Access Management) policy is a JSON document that defines permissions for users, groups, or roles in a cloud environment. It specifies what actions are allowed or denied on specific resources. Here's a breakdown of the standard IAM policy structure:
	
	Key Components of an IAM Policy
	1) Version:
		- Specifies the version of the policy language.
		- Example: "2012-10-17" is commonly used in AWS IAM policies.
	2) Statement:
		- The core component of the policy that defines one or more rules (permissions).
		- A policy can contain multiple statements.
	3) Effect:
		- Specifies whether the rule allows or denies the action.
		- Values: "Allow" or "Deny".
	4) Action:
		- Defines the actions permitted or denied.
		- Example: "s3:GetObject" for reading objects in an Amazon S3 bucket.
	5) Resource:
		- Specifies the resource(s) the policy applies to, typically using an ARN (Amazon Resource Name).
		- Example: "arn:aws:s3:::example-bucket/*".
	6) Condition (Optional):
		- Adds constraints to the policy based on parameters like IP address, time, or MFA (multi-factor authentication).
		- Example: {"IpAddress": {"aws:SourceIp": "192.0.2.0/24"}}.
		
	Example IAM Policy Structure - Here is an example of an AWS IAM policy:
		{
			"Version": "2012-10-17",
			"Statement": [
				{
					"Effect": "Allow",
					"Action": "s3:GetObject",
					"Resource": "arn:aws:s3:::example-bucket/*",
					"Condition": {
						"IpAddress": {
							"aws:SourceIp": "192.0.2.0/24"
						}
					}
				}
			]
		}
