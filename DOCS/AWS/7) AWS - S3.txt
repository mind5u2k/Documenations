Amazon - S3 (Introduction)
--------------------------
	
Section Introduction
	* Amazon S3 is one of the main building blocks of AWS
	* It's advertised as "infinitely scaling" storage.
	* Many websites use Amazon S3 as a backbone.
	* Many AWS services use Amazon S3 as an integration as well.
	* We'll have a step-by-step approach to S3.
	
Amazon S3 Use cases
	* Backup and storage
	* Disaster Recovery
	* Archive
	* Hybrid Cloud storage
	* Application hosting
	* Media hosting
	* Data lakes and big data analytics
	* Software deliver
	* Static website
			------ Nasdaq (Nasdaq stores 7 years of data into S3 Glacier) ------
			------ Sysco (Sysco runs analytics on its data and gain business insights ) ----------
			
Amazon S3 - Buckets
	* Amazon S3 allows people to store objects (files) in "buckets" (directories)
	* Buckets must have a globally unique name (across all regions all accounts)
	* Buckets are defined at the region level
	* S3 looks like a global service but buckets are created in a region
	* Naming convention
		- No Uppercase, No undrescore
		- 3-63 characters long
		- Not an IP
		- Must start with lowercase letter or number
		- Must NOT start with the prefix xn--
		- Must NOT end with the suffix -s3alias
		
Amazon S3 - Objects
	* Objects (files) have a key.
	* The key is the FULL path :
		- s3://my-bucket/my_file.txt
		- s3://my-bucket/my_folder/another_folder/my_file.txt
	* The key is composed of prefix+object name
		- s3://my-bucket/my_folder/another_folder/my_file.txt
	* There's no concept of "directories" within buckets
		(although the UI will trick you to think otherwise)
	* Just keys with very long names that contains slashes("/")
	* Object values are the content of the body:
		- Max. Object size is 5TM(5000GB)
		- If uploading more than 5 GB, ,ust use "multi-part upload"
	* Metadata (list of text key/value pairs - system or user metadata)
	* Tags (Unicode key/value pair - up to 10) - useful for security/lifecycle.
	* Version ID (if versioning is enabled)
	
Amazon S3 - Objects (Hands On)

Amazon S3 - Security
	* User-Based :
		- IAM Policies : which API calls should be allowed for a specific user from IAM
	* Resource-Based	
		- Buckets Policies : bucket wide rules from the S3 console - allows cross accounts
		- Object Access Control List (ACL) - finer grain (can be disabled)
		- Bucket Access Conrol List (ACL) - less common (can be disabled)
	* Note : an IAM principal can access an S3 object if
		- The user IAM permissions ALLOW it OR the resource policy ALLOWS it
		- AND there's no explicit DENY
	* Encryption : encrypt objects in Amazon S3 using encryption keys
	
Amazon S3 Bucket Policies
	* JSON bases policies
	* Use S3 bucket for policy to:
	
Example : Public Access - Use Bucket Policy (*********Image***********)
Example : User Access to S3 - IAM permissions (*********Image***********)
Example : EC2 instance access - Use IAM Roles (*********Image***********)

Advanced : Cross-Account Access - Use Bucket Policy (*********Image***********)

Bucket Settings for Bloc Public Access (*********Image***********)
	* These settings were creatd to prevent company data leaks
	* If you know your bucket should be never be public, leave these on
	* Can be set at the account level
	
Amazon S3 - Security (Hands On)

Amazon S3 - Static Website Hosting
	* S3 can host static websites and have them accessible on the Internet
	* The website URL will be (depending on the region)
		- http://bucket-name.s3-website-aws-region.amazonaws.com
		OR
		- http://bucket-name.s3-website.aws-region.amazonaws.com
	* If you get a 403 Forbidden error, make sure the bucket policy allows public reads !
	
Amazon S3 - Static Website Hosting (Hands On)

Amazon S3 - Versioning
	* You can version your files in Amazon S3
	* It is enabled at the bucket level
	* Same key overwrite will change ther "version": 1,2,3...
	* It is the best practice to version your buckets	
		- It is the best practice unintended deletes (ability to restore a version)
		- Ease roll back to previous version
	* Notes:
		- Any file that is not versioned prior to enabling versioning will have version "null"
		- Suspending versioning does not delete the previous versions
		
Amazon S3 - Replication (CRR & SRR)
	* Must enable Versioning in source and destination buckets
	* Cross-Region Replication (CRR)
	* Same-Region Replication (SRR)
	* Buckets can be in different AWS accounts
	* Copying is asynchronous
	* Must give proper IAM permissions to S3
	
	* Use Cases:
		- CRR : compliance, lower latency access, replication across accounts.
		- SRR : log aggregation, live replication between porduction and test accounts.
		
Amazon S3 - Replication (Notes)
	* After you enable Replication, only new objects are replicated.
	* Optionally, you  can replicate existing objects using S3 Batch Replication
		- Replicates esixting objexts and objects that failed replication
	* For DELETE operations
		- Can replicate delte markers from source to target (optional setting)
		- Deletions with a version ID are not replicated (to avoid malicious deltes)
	* there is no "chaining" of replication
		- If bucket 1 has replication into bucket2, which has replication into bucket3
		- Then objects created in bucket 1 are not replicated to bucket 3
		
Amazon S3 - Replication  (Hands On)


Amazon S3 Storage Classes
	* Amazon S3 Standard - General Purpose
		- 99.99% availability
		- Used for frequently accessed data
		- Low latency and high throughput
		- Sustain 2 concurrent facility failures
		- Use Cases : Big Data analytics, Mobile & Gaming applications, content distribution...
		
	* Amazon S3 Standard - Infrequent Access	
		- For data that is less frequently accessed, but requires rapid access when needed 
		- Lower cost than S3 standard
		* Amazon S3 Standard - Infrequent Access (S3 Standard- IA)
			- 99.9% Availability
			- Use cases: Disaster Recovery, backups
		* Amazon S3 One Zone-Infrequent Access (S3 One Zone - IA)
			- High durability (99.99999999%) in a single AZ; data lost when AZ is destroyed
			- 99.5% Availability
			- Use Cases : Storing secondary backup copiesof on-premise data, or data you can recreate 
	* Amazon S3 Glacier	Storage Classes
		- Low-cost object storage meant for archiving/backup
		- Pricing : price for storage + object retrieval cost
		* Amazon S3 Glacier Instant Retrieval
			- Millisecond retrieval, great for data accessed once a quarter
			- Minimum storage duration of 90 days			
		* Amazon S3 Glacier Flexible Retrieval
			- Expedite (1 to 5 minutes), Standard (3 tp 5 hours), Bulk(5 to 12 hour) - free
			- Minimum storage duration of 90 days
		* Amazon S3 Glacier Deep Archive
			- Standard(12 hours), Bulk(48 hours)			
	* Amazon S3 Intelligent Tiering
		- Small monthly monitoring and auto-tiering fee.
		- Moves objects automatically between Access Tiers based on usage
		- There are no retrieval charges in S3 Intelligent - Tiering
		
		- Frequent Access tier (automatic): default tier
		- Infrequent Access tier (automatic): objects not accessed for 30 days
		- Archive Instant Access tier (automatic) : objects not accessed for 90 days
		- Archive Access tier (optional) : configurable from 90 days to 700+ days
		- Deep Archive Access tier (optional) : configurable from 180 days to 700+ days
	
	* Can move between classes manually or using S3 Lifecycle configurations
	
S3 Durability and Availability
	* Durability
		- High durability (99.99999999%, 11 9's) of objects across multiple AZ
		- If you store 10,000,000 objects with Amazon S3, you can on average expcet to incur a loss of a single object once every 10,000 years.
		- Same for all storage classes
	* Availability
		- Measures how readily available a service is
		- Varies depending on storage classe
		- Example : S3 standard has 99.999% availability = not available 53 minute a year
	